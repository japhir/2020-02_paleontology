#+TITLE: Making Paleontology---fauna excercise 8 in R
#+OPTIONS: ^:{}
#+PROPERTY: header-args:R  :session *R* :exports both :results output :eval no-export
#+AUTHOR: Ilja J. Kocken
#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup

#+begin_src R :exports none :results none
  options(crayon.enabled = FALSE)
#+end_src

* Preparation
If you're curious about learning R, this exercise could be a fun little first
challenge!

While excel works, it often introduces problems that shouldn't be there: in
this exercise it isn't able to plot the age in millions of years ago (~Ma~) as a
~date~, because it doesn't have enough digits for conversion. As a workaround you
can convert it to ~kyr~ in stead.

That is obviously stupid. And it's not the only frustrating excel thing you may
run into. One of the nice things about using a scripting language---such as
python or R---instead, is that your work becomes reproducible and you and
others can use your tricks again in the future!

Here we show you how you could do this exercise in R. Please play around first
and enjoy the struggle for a bit.

** installation
Install [[https://www.r-project.org/][R]] and [[https://rstudio.com/][RStudio]]. R is the programming language and RStudio is a friendly
graphical interface (or technically Integrated Development Environment) for R.

If you don't know how, you can follow many online guides, such as this [[https://courses.edx.org/courses/UTAustinX/UT.7.01x/3T2014/56c5437b88fa43cf828bff5371c6a924/][edX course]].
Note that for Mac users there are some additional installation steps required.

Install the required packages---extensions of R that make life even
easier!---by opening RStudio and going to the bottom-left panel (the terminal)
and typing, e.g.:

#+begin_src R :eval never
  install.packages("ggplot2")
#+end_src

Or, if you want to use ~ggplot2~, ~dplyr~, ~purrr~, etc., which I highly recommend,
install them all at once with:

#+begin_src R :eval never
  install.packages("tidyverse")
#+end_src

since they are part of the [[https://www.tidyverse.org/][tidyverse]], a collection of packages that makes R
amazing.

** load the libraries
These commands make the package functions available for use in your session:
#+begin_src R :results output
  library(readr)      # to read in the csv file (or use readxslx to read in excel files)
  library(ggplot2)    # for plotting
  library(patchwork)  # for composite plots
  library(dplyr)      # for tidy data manipulation
  library(tidyr)
#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
#+end_example

** getting started
As a start, I highly recommend reading through the freely available book [[https://r4ds.had.co.nz/][R for
data science]] by Hadley Wickham. You can also try the datacamp [[https://www.datacamp.com/courses/free-introduction-to-r][Introduction to R]]
online course, which helped me get started initially. One last resource to get
you started is to install the package ~swirl~ and interactively learn the basics
right from R.

#+begin_src R :eval never
  install.packges("swirl")
  library(swirl)
  swirl()
#+end_src

** getting help
When you have problems or questions, have a look at any error messages if
present and consult the documentation of the function of interest with,
~?function_name~ or search for a topic with ~??topic~.

e.g., enter:
#+begin_src R :eval never
 ?ggplot
#+end_src
in the terminal.

+If+ When you have questions, search! This is not considered cheating!
[[https://stackoverflow.com/][StackOverflow]], your search engine, and sometimes even twitter ~#Rlang~ are your
friends!
